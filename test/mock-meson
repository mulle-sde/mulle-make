#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


filter_darwin()
{
   sed -e 's|/Applications/Xcode.*\.app/.*/MacOSX.*\.sdk|\${SDKPATH}|g' |
   sed -e 's|/Library/Developer/CommandLineTools/SDKs/MacOSX.*\.sdk|\${SDKPATH}|g'
}


emit_args()
{
   local key

   while [ "$#" -ne 0 ]
   do
      key="$1"
      case "${key}" in
         -*=*)
            printf "%s\n" "${key}"
         ;;

         --backend|--prefix)
            shift
            printf "%s\n" "${key} `basename -- "$1"`"
         ;;

         --buildtype|--*dir)
            shift
            printf "%s\n" "${key} $1"
         ;;

         -*)
            printf "%s\n" "${key}"
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   while [ "$#" -ne 0 ]
   do
      # just emit directory names
      basename -- "$1"
      shift
   done
}


emit_env()
{
   local key
   local value

   IFS=":"
   set -o noglob
   for key in ${__MULLE_MAKE_ENV_ARGS}
   do
      set +o noglob
      if [ ! -z "${key}" ]
      then
         value="`eval echo "\\\$$key"`" || fail "eval failed"
         echo "[${key}=${value}]"
      fi
   done
   IFS="${DEFAULTIFS}"
   set +o noglob
}


emit_env_and_args()
{
   emit_env
   emit_args "$@"
}


main()
{
   local envvar
   local filename

   [ -z "${__MULLE_MAKE_ENV_ARGS}" ] &&
      fail "not called by mulle-make (__MULLE_MAKE_ENV_ARGS is missing)"

   envvar="`basename -- "$0" | sed 's/^[A-Za-z]*-\(.*\)/\1/' | tr '[a-z]' '[A-Z]'`_REDIRECT_FILE"
   filename="`eval echo "\\\$$envvar"`"

   if [ ! -z "${filename}"  ]
   then
      log_info "${MULLE_EXECUTABLE_NAME}: Writing defines to \"${filename}\""
      emit_env_and_args "$@" | filter_darwin | LC_ALL=C sort > "${filename}"
   else
      emit_env_and_args "$@" | filter_darwin | LC_ALL=C sort
   fi
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
}


init "$@"
main "$@"
