#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


filter_darwin()
{
   sed -e 's|/Applications/Xcode.*\.app/.*/MacOSX.*\.sdk|\${SDKPATH}|g' |
   sed -e 's|/Library/Developer/CommandLineTools/SDKs/MacOSX.*\.sdk|\${SDKPATH}|g'
}


_emit_defines()
{
   while [ "$#" -ne 0 ]
   do
      case "$1" in
         -D)
            shift
            printf "%s\n" "$1"
         ;;

         -D*)
            cut -c3- <<< "${1}"
         ;;

         -I)
         ;;

         -I*)
            shift
         ;;

         -W|-o|-l|-j|-C)
            shift
         ;;
      esac

      shift
   done
}


emit_defines()
{
   local escaped_test_path
   local escaped_tmp_path

   [ -z "${MULLE_TEST_DIR}" ] && internal_fail "MULLE_TEST_DIR is undefined"
   [ -z "${MULLE_TMP_DIR}" ] && internal_fail "MULLE_TMP_DIR is undefined"

   r_escaped_sed_pattern "${MULLE_TEST_DIR}"
   escaped_test_path="${RVAL}"
   r_escaped_sed_pattern "${MULLE_TMP_DIR}"
   escaped_tmp_path="${RVAL}"
   _emit_defines "$@"| sed -e "s/${escaped_test_path:-^}/\${MULLE_TEST_DIR}/g" -e "s/${escaped_tmp_path:-^}/\${MULLE_TMP_DIR}/g"
}


main()
{
   local envvar
   local filename

   local exename

   # remove mock- prefix , convert to uppercase, append _REDIRECT_FILE
   envvar="`basename -- "$0" | sed 's/^[A-Za-z]*-\(.*\)/\1/' | tr 'a-z' 'A-Z'`_REDIRECT_FILE"
   if [ ! -z "${ZSH_VERSION}" ]
   then
      filename="${(P)envvar}"
   else
      filename="${!envvar}"
   fi
   if [ ! -z "${filename}"  ]
   then
      log_info "${MULLE_EXECUTABLE_NAME}: Writing defines to \"${filename}\""
      emit_defines "$@" | filter_darwin | LC_ALL=C sort > "${filename}"
   else
      emit_defines "$@" | filter_darwin | LC_ALL=C sort
   fi
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
}


init "$@"
main "$@"


