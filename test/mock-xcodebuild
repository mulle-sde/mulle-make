#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


filter_darwin()
{
   sed -e 's|/Applications/Xcode.*\.app/.*/MacOSX.*\.sdk|\${SDKPATH}|g' |
   sed -e 's|/Library/Developer/CommandLineTools/SDKs/MacOSX.*\.sdk|\${SDKPATH}|g'
}


emit_args()
{
   local argument
   local key
   local value
   local envvar
   local prefix
   local subst

   prefix="`eval "echo \$MOCK_TEST_DIR"`"
   prefix="`escaped_sed_pattern "${prefix}"`"

   while [ "$#" -ne 0 ]
   do
      argument="$1"
      case "${argument}" in
         -project|-target|-configuration|-scheme|-workspace|-sdk|-destination*)
            shift
            printf "%s %s\n" "${argument}" "$1"
         ;;

         -xc*|-export-*|-arch|-enable*|-*Path|-*Language|-toolchain)
            shift
            printf "%s %s\n" "${argument}" "$1"
         ;;

         -*=*)
            key="$(cut -d= -f1 <<< "${argument:1}")"
            value="$(cut -d= -f2- <<< "${argument:1}")"
            subst="$(sed "s/^\\(.*\\)${prefix}\\(.*\\)/\\1\${MOCK_TEST_DIR}\\2/g" <<< "${value}")"
            subst="$(sed "s|^/private\${MOCK_TEST_DIR}|\${MOCK_TEST_DIR}|" <<< "${subst}")"
            printf "%s\n" "<$key=${subst}>"
         ;;

         *=*)
            key="$(cut -d= -f1 <<< "${argument}")"
            value="$(cut -d= -f2- <<< "${argument}")"
            subst="$(sed "s/^\\(.*\\)${prefix}\\(.*\\)/\\1\${MOCK_TEST_DIR}\\2/g" <<< "${value}")"
            subst="$(sed "s|^/private\${MOCK_TEST_DIR}|\${MOCK_TEST_DIR}|" <<< "${subst}")"
            printf "%s\n" "$key=${subst}"
         ;;

         # commands ignore
         -license|-usage|-version|-showsdks|-showBuildSettings|-list|-exportArchive|-exportLocalizations|-importLocalizations)
         ;;

         # actions ignore
         build|build-for-testing|analyze|archive|test|test-without-building|install-src|install|clean)
         ;;

         "")
         ;;

         *)
            printf "%s\n" "${argument}"
         ;;
      esac

      shift
   done
}


main()
{
   local envvar
   local filename

   envvar="`basename -- "$0" | sed 's/^[A-Za-z]*-\(.*\)/\1/' | tr '[a-z]' '[A-Z]'`_REDIRECT_FILE"
   filename="${!envvar}"

   if [ ! -z "${filename}"  ]
   then
      log_info "${MULLE_EXECUTABLE_NAME}: Writing defines to \"${filename}\""
      emit_args "$@" | filter_darwin | LC_ALL=C sort > "${filename}"
   else
      emit_args "$@" | filter_darwin | LC_ALL=C sort
   fi
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`"

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
}


init "$@"
main "$@"


